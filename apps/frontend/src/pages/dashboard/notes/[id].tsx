import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import Head from "next/head";
import { useRouter } from "next/router";

import { DashboardLayout } from "@/components/layout/Dashboard";
import { NoteTemplate } from "@/components/templates/Note/Note";

import { useApi } from "@/hooks";
import { ApiNoteResponse } from "@/pages/api/dashboard/note";

const Note = () => {
  const router = useRouter();
  const { data } = useApi<ApiNoteResponse>({
    endpoint: "/api/dashboard/note",
    params: { id: router.query.id },
    onSuccess(data) {
      if (data?.note) return;

      router.push("/404");
    },
  });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NoteTemplate note={data?.note} />
    </>
  );
};

export default Note;
Note.getLayout = function getLayout(page: React.ReactNode) {
  return <DashboardLayout>{page}</DashboardLayout>;
};

export const getServerSideProps: GetServerSideProps = async ({
  params,
  locale,
}) => {
  if (!params || !params.id) return { notFound: true };

  return {
    props: {
      ...(await serverSideTranslations(locale as string)),
      id: params.id,
    },
  };
};
